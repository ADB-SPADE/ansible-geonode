import os


# Defines the directory that contains the settings file as the PROJECT_ROOT
# It is used for relative settings elsewhere.
PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))

SITEURL = "{{site_url}}"

DATABASES = {
    'default': {
         'ENGINE': 'django.contrib.gis.db.backends.postgis',
{% if app_name == 'legacy' %}
         'NAME': '{{db_metadata_instance}}',
         'HOST': '{{metadata_db}}',
{% else %}
         'NAME': '{{app_name}}',
         'HOST': '127.0.0.1',
{% endif %}
         'USER': '{{db_user}}',
         'PASSWORD': '{{db_password}}',
         'PORT': '5432',
     },
    # vector datastore for uploads
    'datastore' : {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': '{{db_data_instance}}',
        'USER' : '{{db_user}}',
        'PASSWORD' : '{{db_password}}',
        'HOST' : '{{datastore_db}}',
        'PORT' : '5432',
    }
}

# OGC (WMS/WFS/WCS) Server Settings
OGC_SERVER = {
    'default' : {
        'BACKEND' : 'geonode.geoserver',
        'LOCATION' : '{{geoserver_location}}',
        'PUBLIC_LOCATION' : '{{geoserver_location}}',
        'USER' : 'admin',
        'PASSWORD' : 'geoserver',
        'MAPFISH_PRINT_ENABLED' : True,
        'PRINT_NG_ENABLED' : True,
        'GEONODE_SECURITY_ENABLED' : True,
        'GEOGIG_ENABLED' : False,
        'WMST_ENABLED' : False,
        'BACKEND_WRITE_ENABLED': True,
        'WPS_ENABLED' : False,
        'LOG_FILE': '%s/geoserver/data/logs/geoserver.log' % os.path.abspath(os.path.join(PROJECT_ROOT, os.pardir)),
        # Set to name of database in DATABASES dictionary to enable
        'DATASTORE': '', #'datastore',
    }
}

CATALOGUE = {
    'default': {
        'ENGINE': 'geonode.catalogue.backends.pycsw_local',
        'URL': '%scatalogue/csw' % SITEURL,
    }
}

MEDIA_ROOT = "/var/www/{{ app_name }}/uploaded"
STATIC_ROOT = "/var/www/{{ app_name }}/static"
