###
# Pulls the code from a remote Git repository, configures the web application,
# creates a virtualenv, and collects static assets
#
---
- name: ensure apt cache is up to date
  apt: update_cache=yes
  sudo: yes

- name: ensure web server packages are installed
  apt: name={{item}}
  sudo: yes
  with_items:
    - git
    - python-dev
    - libpq-dev
    - python-virtualenv
    - postgresql-client-common
    - postgresql-client
    - python-dev
    - python-imaging
    - python-lxml
    - python-pyproj
    - python-shapely
    - python-gdal
    - python-nose
    - python-httplib2
    - python-software-properties
    - gettext
    - build-essential
    - libxml2-dev
    - libxslt1-dev
    - zlib1g-dev
    - gdal-bin
    - libgeos-dev
    - libproj-dev
    - unzip
    - zip
    - libjpeg-dev
    - libpng-dev
    - libxslt-dev


- name: install known_hosts file to access GitHub
  copy: src=ssh_conf/known_hosts dest={{ssh_dir}}/known_hosts

- name: checkout latest web app code
  git: repo={{code_repository}} version={{app_name}} dest={{app_code_dir}}/{{app_name}}

- name: check if virtualenv already exists
  stat: path={{virtualenv_dir}}/{{app_name}}
  register: venv_dir

- name: create virtualenv for Django web application
  shell: virtualenv --system-site-packages {{virtualenv_dir}}/{{app_name}}
  when: venv_dir.stat.isdir is not defined

- name: install web application dependencies listed in requirements.txt
  pip: name=file:///{{app_code_dir}}/{{app_name}}
       virtualenv={{virtualenv_dir}}/{{app_name}}
       extra_args='-e'

- name: create static directory for Django app if it does not exist
  file: path=/var/www/{{app_name}}/static state=directory mode=0755 owner=www-data group=www-data
  sudo: yes

- name: create uploaded directory for Django app if it does not exist
  file: path=/var/www/{{app_name}}/uploaded state=directory mode=0755 owner=www-data group=www-data
  sudo: yes

- name: create vassal file as a symlink
  file: src=/etc/uwsgi/vassals-default.ini dest=/etc/uwsgi/{{app_name}}.ini owner=www-data group=www-data state=link
  sudo: yes

- name: create uwsgi log directory
  file: path=/var/log/uwsgi state=directory mode=0777 owner=www-data group=www-data
  sudo: yes

- name: Django collectstatic
  django_manage: command=collectstatic
                 app_path={{app_code_dir}}/{{app_name}}
                 virtualenv={{virtualenv_dir}}/{{app_name}}
                 settings={{main_module}}.settings

#- name: Django syncdb
#  django_manage: command=syncdb
#                 app_path={{app_code_dir}}/{{app_name}}
#                 virtualenv={{virtualenv_dir}}/{{app_name}}
#                 settings={{main_module}}.settings
