import os
from {{ app_name }}.settings import *

POSTGIS_VERSION = (2, 2, 1)

PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))

SITEURL = "http://{{server_name}}/"

DATABASES = {
    'default': {
         'ENGINE': 'django.db.backends.postgresql_psycopg2',
         'NAME': '{{db_metadata_instance}}',
         'USER': '{{db_user}}',
         'PASSWORD': '{{db_password}}',
     },
    # vector datastore for uploads
    '{{ app_name }}' : {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': '{{db_data_instance}}',
        'USER' : '{{db_user}}',
        'PASSWORD' : '{{db_password}}',
        'HOST' : 'localhost',
        'PORT' : 5432
    }
}


GEOSERVER_LOCATION = os.getenv(
    'GEOSERVER_LOCATION', 'http://{{server_name}}/geoserver/'
)

GEOSERVER_PUBLIC_LOCATION = os.getenv(
    'GEOSERVER_LOCATION', 'http://{{server_name}}/geoserver/'
)

OGC_SERVER_DEFAULT_USER = os.getenv(
    'GEOSERVER_ADMIN_USER', '{{ gs_admin_user }}'
)

OGC_SERVER_DEFAULT_PASSWORD = os.getenv(
    'GEOSERVER_ADMIN_PASSWORD', '{{ gs_admin_password }}'
)

# OGC (WMS/WFS/WCS) Server Settings
OGC_SERVER = {
    'default' : {
        'BACKEND' : 'geonode.geoserver',
        'LOCATION' : GEOSERVER_LOCATION,
        'LOGIN_ENDPOINT': 'j_spring_oauth2_geonode_login',
        'LOGOUT_ENDPOINT': 'j_spring_oauth2_geonode_logout',
        'PUBLIC_LOCATION' : GEOSERVER_PUBLIC_LOCATION,
        'USER' : '{{ gs_admin_user }}',
        'PASSWORD' : '{{ gs_admin_password }}',
        'MAPFISH_PRINT_ENABLED' : True,
        'PRINT_NG_ENABLED' : True,
        'GEONODE_SECURITY_ENABLED' : True,
        'GEOGIG_ENABLED' : False,
        'WMST_ENABLED' : False,
        'BACKEND_WRITE_ENABLED': True,
        'WPS_ENABLED' : False,
        'LOG_FILE': '%s/geoserver/data/logs/geoserver.log' % os.path.abspath(os.path.join(PROJECT_ROOT, os.pardir)),
        # Set to name of database in DATABASES dictionary to enable
        'DATASTORE': '{{ app_name }}', #'datastore',
    }
}

STAMEN_ATTR = ('Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a'
               ' href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</'
               'a> &mdash; Map data &copy; <a href="http://www.openstreetmap.o'
'rg/copyright">OpenStreetMap</a>')


MAP_BASELAYERS = [{"source": {
    "ptype": "gxp_wmscsource",
    "url": OGC_SERVER['default']['PUBLIC_LOCATION'] + "wms",
    "restUrl": "/gs/rest",
    "title": "{{ app_name }} Geoserver"
}},
{
    "source": {"ptype": "gxp_olsource"},
    "type":"OpenLayers.Layer",
    "args":["No background"],
    "visibility": False,
    "fixed": True,
    "group":"background"
  },
{
    "source": {"ptype": "gxp_mapboxsource"},
  },
{
    "source": {"ptype": "gxp_olsource"},
    "type":"OpenLayers.Layer.XYZ",
    "args":[
    "Humanitarian OpenStreetMap", ["http://a.tile.openstreetmap.fr/hot/${z}/${x}/${y}.png", "http://b.tile.openstreetmap.fr/hot/${z}/${x}/${y}.png", "http://c.tile.openstreetmap.fr/hot/${z}/${x}/${y}.png"], {"transitionEffect": "resize","attribution": "osm_attribution"}],
    "visibility": True,
    "fixed": True,
    "group":"background"
},{
    "source": {"ptype": "gxp_olsource"},
    "type": "OpenLayers.Layer.OSM",
    "name": "mapnik",
    "visibility": True,
    "fixed": True,
    "group": "background"
}, {
    "source": {"ptype": "gxp_olsource"},
    "type": "OpenLayers.Layer.XYZ",
    "args": [
        'Stamen Toner',
        'http://stamen-tiles-a.a.ssl.fastly.net/toner/${z}/${x}/${y}.png',
        {
            'transitionEffect': 'resize',
            'attribution': '%s' % STAMEN_ATTR,
        }
    ],
    "visibility": False,
    "fixed": True,
    "group": "background"
}, {
    "source": {"ptype": "gxp_olsource"},
    "type": "OpenLayers.Layer.XYZ",
    "args": [
        'Stamen Toner Lite',
        'http://stamen-tiles-a.a.ssl.fastly.net/toner-lite/${z}/${x}/${y}.png',
        {
            'transitionEffect': 'resize',
            'attribution': '%s' % STAMEN_ATTR,
        }
    ],
    "visibility": False,
    "fixed": True,
    "group": "background"
}, {
    "source": {"ptype": "gxp_olsource"},
    "type": "OpenLayers.Layer.XYZ",
    "args": [
        'Stamen Watercolor',
        'http://stamen-tiles-a.a.ssl.fastly.net/watercolor/${z}/${x}/${y}.png',
        {
            'transitionEffect': 'resize',
            'attribution': '%s' % STAMEN_ATTR,
        }
    ],
    "visibility": False,
    "fixed": True,
    "group": "background"
}]


CATALOGUE = {
    'default': {
        'ENGINE': 'geonode.catalogue.backends.pycsw_local',
        'URL': '%scatalogue/csw' % SITEURL,
    }
}

MEDIA_ROOT = "/data/{{ app_name }}/uploaded"
STATIC_ROOT = "/data/{{ app_name }}/static"

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]


PROXY_ALLOWED_HOSTS += ('localhost', '127.0.0.1', '{{ server_name }}', 'nominatim.openstreetmap.org', "https://services.bgr.de/wms/")
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '{{ server_name }}']


GEOSERVER_BASE_URL = GEOSERVER_LOCATION
MAXIMUM_CLIP_SIZE = 10000000




DEBUG = False
#debug_toolbar settings
if DEBUG:
    INTERNAL_IPS = ('127.0.0.1',)
    MIDDLEWARE_CLASSES += (
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    )

    INSTALLED_APPS += (
        'debug_toolbar',
    )

    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.versions.VersionsPanel',
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.settings.SettingsPanel',
        'debug_toolbar.panels.headers.HeadersPanel',
        'debug_toolbar.panels.request.RequestPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.staticfiles.StaticFilesPanel',
        'debug_toolbar.panels.templates.TemplatesPanel',
        'debug_toolbar.panels.cache.CachePanel',
        'debug_toolbar.panels.signals.SignalsPanel',
        'debug_toolbar.panels.logging.LoggingPanel',
        'debug_toolbar.panels.redirects.RedirectsPanel',
    ]

    DEBUG_TOOLBAR_CONFIG = {
        'INTERCEPT_REDIRECTS': False,
    }

